yggdrasil {

    // 配置文件版本 (不要修改)
    version = "0.1.0"

    // Ktor netty 环境配置
    netty {
        // 存储无法立即处理的 ApplicationCall 实例的队列大小
        requestQueueLimit = 16
        // 来自同一 http 管道的并发运行请求数
        runningLimit = 10
        // 不要创建单独的呼叫事件组并重新使用工作组来处理呼叫
        shareWorkGroup = false
        // 向客户端发送响应的超时（以秒为单位）
        responseWriteTimeoutSeconds = 10
    }

    // 应用程序存储配置
    storage {
        // 可用的存储类型: [SQLite, MySQL]
        type = "SQLite"
        // 可用的密码加密类型: [Raw, Md5, Sha1, Sha256, Sha512, SaltedMd5, SaltedSha1, SaltedSha256, SaltedSha512]
        passwordEncryption = "SaltedSha1"
        // SQLite 数据库配置
        sqlite {
            database = "yggdrasil.db"
        }
        // MySQL 数据库配置
        mysql {
            threads = 5
            poolName = null
            address = "localhost:3306"
            database = "yggdrasil"
            username = "root"
            password = ""
            maxPoolSize = 10
            minIdleConnections = 10
            maxLifetime = 1800000
            connectionTimeout = 5000
            // 自定义 MySQL 属性
            useSSL = true
        }
    }

    // 应用用户设置
    user {
        // 用户注册设置
        registration {
            // 是否启用注册功能
            // See => POST /authserver/register
            enable = true
            // 注册用户的密码验证（正则表达式（
            // 基本验证
            passwordVerify = "^[\\w]{6,16}$"
            // 密码强度的二次验证（正则表达式）
            // 密码强度至少应该等于或大于此值
            // 如果你不想验证强度，请保持 = "^.*$"
            // 匹配任何 :
            //passwordStrengthVerify = "^.*$"
            // 至少八个字符，至少一个字母和一个数字 :
            //passwordStrengthVerify = "^(?=.*?[A-Za-z])(?=.*?[0-9]).{8,}$"
            // 至少九个字符和至少一个字母，一个数字和一个特殊字符 :
            //passwordStrengthVerify = "^(?=.*?[A-Za-z])(?=.*?[0-9])(?=.*?[\\w]).{9,}$"
            passwordStrengthVerify = "^(?=.*?[A-Za-z])(?=.*?[0-9]).{8,}$"
            // 注册用户的昵称验证 （正则表达式）
            // 默认值：至少3位数，最多16位，包含字母，数字或下划线
            nicknameVerify = "^[\\w]{3,16}$"
        }
        // 用户令牌设置
        token {
            // |----------------------------------------------------------------------------------------------------------
            // |----- 1. 有效 -----|----- 2. 暂时有效 -----| 3. 完全无效
            // |-------------------------------------------------------------------------------------------------> Time
            // 访问令牌的有效时间 （秒）（(默认值: 3天）
            // 可以理解，访问令牌在该时间段内是有效的。
            valid = 259200
            // 访问令牌的无效时间（秒）（默认值：7天）
            // 如果超过上述有效时间且小于当前无效时间，则它处于暂时无效状态。
            // 超过当前无效时间，则完全无效。
            invalid = 604800
        }
    }

    // 应用程序连接器
    // 支持配置多个连接器
    connectors = [
        {
            host = "127.0.0.1"
            port = 9055
        }
    ]
}
